priority -50

extends c

# We want to overwrite everything in parent ft.
priority -49


snippet beginend "$1.begin(), $1.end() (beginend)"
${1:v}${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}begin(), $1${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}end()
endsnippet

snippet cl "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	${1/(\w+).*/$1/} (${2:arguments});
	virtual ~${1/(\w+).*/$1/} ();

private:
	${0:/* data */}
};
endsnippet

snippet cli "class implementation"
${1:`!p snip.rv = snip.basename or "name"`}::$1(${2})
{
}

$1::~$1()
{
}
endsnippet

snippet ns "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`}
{
	$0
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet map "std::map (map)"
std::map<${1:key}, ${2:value}> map$0;
endsnippet

snippet vector "std::vector (v)"
std::vector<${1:char}> v$0;
endsnippet

snippet tp "template <typename ..> (template)"
template <typename ${1:_InputIter}>
endsnippet

snippet prueba "Pruebas rapidas"
#include <iostream>

int main(int argc, char **argv)
{
	${1}
	return 0;
}
endsnippet

snippet boost "Include boost header"
#include <boost/${1:shared_ptr}.hpp>
endsnippet

snippet iostream "Include iostream"
#include <iostream>
endsnippet

snippet cout
std::cout << ${1:""} << std::endl;
endsnippet

snippet trace
std::cout << __FUNCTION__ << " ${1}" << std::endl;
endsnippet

snippet mfun "Method implementation"
${4:void} ${1:`!p snip.rv = snip.basename or "name"`}::${2:memberFunction}(${3})
{
	${5:return};
}
endsnippet

# vim:set expandtab ft=snippets:
